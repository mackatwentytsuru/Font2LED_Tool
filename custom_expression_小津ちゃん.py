# Custom Expression for Skybrush Color Ramp + Custom Expression
# 小津ちゃん LED表示 - 座標ベース制御

# グリッドサイズ設定
GRID_WIDTH = 65
GRID_HEIGHT = 10

# ドローン配置の座標範囲（実際のSkybrush配置）
X_MIN, X_MAX = -47.1, 47.1  # 65列 × 1.5m間隔（実測値）
Z_MIN, Z_MAX = 45.7, 58.9   # 10行 × 1.4m間隔（実測値）

# 小津ちゃんピクセルデータ（JSONから抽出）
PIXELS = [
    (7,1), (14,1), (15,1), (22,1), (23,1), (32,1), (57,1),
    (7,2), (16,2), (17,2), (19,2), (20,2), (21,2), (22,2), (23,2), (24,2), (25,2), 
    (27,2), (28,2), (29,2), (30,2), (31,2), (32,2), (33,2), (34,2), (35,2), (36,2), (56,2),
    (3,3), (4,3), (7,3), (11,3), (22,3), (23,3), (25,3), (31,3), (45,3), (56,3),
    (3,4), (4,4), (7,4), (12,4), (14,4), (15,4), (18,4), (19,4), (20,4), (21,4), 
    (22,4), (23,4), (24,4), (25,4), (30,4), (42,4), (45,4), (55,4),
    (2,5), (7,5), (16,5), (17,5), (22,5), (23,5), (25,5), (30,5), (31,5), (32,5), 
    (33,5), (34,5), (35,5), (36,5), (42,5), (44,5), (45,5), (46,5), (47,5), (48,5), 
    (55,5), (56,5), (57,5),
    (1,6), (7,6), (19,6), (20,6), (21,6), (22,6), (23,6), (24,6), (25,6), (28,6), 
    (29,6), (37,6), (39,6), (40,6), (41,6), (42,6), (43,6), (49,6), (53,6), (54,6), (58,6),
    (7,7), (16,7), (17,7), (22,7), (23,7), (37,7), (43,7), (46,7), (47,7), (48,7), (52,7), (58,7),
    (7,8), (15,8), (18,8), (19,8), (20,8), (21,8), (22,8), (23,8), (24,8), (25,8), 
    (36,8), (44,8), (52,8), (58,8), (62,8),
    (5,9), (6,9), (7,9), (14,9), (22,9), (23,9), (32,9), (33,9), (34,9), (35,9), 
    (44,9), (51,9), (59,9), (60,9), (61,9)
]

# メイン関数
def evaluate():
    # ドローンの現在位置を取得
    x_pos = position[0]  # X座標
    z_pos = position[2]  # Z座標（高さ）
    
    # 座標をグリッドインデックスに変換
    # X軸: 左から右（0-64）
    grid_x = int(round((x_pos - X_MIN) / (X_MAX - X_MIN) * (GRID_WIDTH - 1)))
    
    # Z軸: 下から上、ただしJSONデータは上が0なので反転（0-9）
    grid_z = 9 - int(round((z_pos - Z_MIN) / (Z_MAX - Z_MIN) * (GRID_HEIGHT - 1)))
    
    # 範囲チェック
    if 0 <= grid_x < GRID_WIDTH and 0 <= grid_z < GRID_HEIGHT:
        # ピクセルデータをチェック
        if (grid_x, grid_z) in PIXELS:
            return 1.0  # 文字部分（Color Rampで色に変換）
    
    return 0.0  # 背景（黒）

# 実行
result = evaluate()